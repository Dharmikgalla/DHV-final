"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_app-pages-browser_app_App_tsx",{

/***/ "(app-pages-browser)/./app/components/ScatterPlot.tsx":
/*!****************************************!*\
  !*** ./app/components/ScatterPlot.tsx ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ScatterPlot: function() { return /* binding */ ScatterPlot; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_MapPin_ShoppingBag_User_lucide_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! __barrel_optimize__?names=MapPin,ShoppingBag,User!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/user.js\");\n/* harmony import */ var _barrel_optimize_names_MapPin_ShoppingBag_User_lucide_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! __barrel_optimize__?names=MapPin,ShoppingBag,User!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/map-pin.js\");\n/* harmony import */ var _barrel_optimize_names_MapPin_ShoppingBag_User_lucide_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! __barrel_optimize__?names=MapPin,ShoppingBag,User!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/shopping-bag.js\");\n\nvar _s = $RefreshSig$();\n\n\nfunction ScatterPlot(param) {\n    let { dataPoints, clusters, connections, datasetType, xLabel, yLabel, xRange, yRange, onAddPoint, onPointHover, onClusterHover, addMode } = param;\n    _s();\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [hoveredPoint, setHoveredPoint] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [hoveredCluster, setHoveredCluster] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [dimensions, setDimensions] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        width: 800,\n        height: 600\n    });\n    const [mousePos, setMousePos] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        x: 0,\n        y: 0\n    });\n    const padding = {\n        top: 40,\n        right: 40,\n        bottom: 60,\n        left: 70\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const updateDimensions = ()=>{\n            if (containerRef.current) {\n                const { width } = containerRef.current.getBoundingClientRect();\n                setDimensions({\n                    width,\n                    height: Math.max(500, width * 0.75)\n                });\n            }\n        };\n        updateDimensions();\n        window.addEventListener(\"resize\", updateDimensions);\n        return ()=>window.removeEventListener(\"resize\", updateDimensions);\n    }, []);\n    const getScales = ()=>{\n        if (xRange && yRange) {\n            // Use provided ranges\n            return {\n                xMin: xRange[0],\n                xMax: xRange[1],\n                yMin: yRange[0],\n                yMax: yRange[1]\n            };\n        }\n        // Fallback to data-based scaling\n        const xValues = dataPoints.map((p)=>p.x);\n        const yValues = dataPoints.map((p)=>p.y);\n        const xMin = Math.min(...xValues);\n        const xMax = Math.max(...xValues);\n        const yMin = Math.min(...yValues);\n        const yMax = Math.max(...yValues);\n        const xRange = xMax - xMin || 1;\n        const yRange = yMax - yMin || 1;\n        return {\n            xMin: xMin - xRange * 0.1,\n            xMax: xMax + xRange * 0.1,\n            yMin: yMin - yRange * 0.1,\n            yMax: yMax + yRange * 0.1\n        };\n    };\n    const scaleX = (x)=>{\n        const scales = getScales();\n        return padding.left + (x - scales.xMin) / (scales.xMax - scales.xMin) * (dimensions.width - padding.left - padding.right);\n    };\n    const scaleY = (y)=>{\n        const scales = getScales();\n        return dimensions.height - padding.bottom - (y - scales.yMin) / (scales.yMax - scales.yMin) * (dimensions.height - padding.top - padding.bottom);\n    };\n    const inverseScaleX = (px)=>{\n        const scales = getScales();\n        return scales.xMin + (px - padding.left) / (dimensions.width - padding.left - padding.right) * (scales.xMax - scales.xMin);\n    };\n    const inverseScaleY = (px)=>{\n        const scales = getScales();\n        return scales.yMin + (dimensions.height - padding.bottom - px) / (dimensions.height - padding.top - padding.bottom) * (scales.yMax - scales.yMin);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const canvas = canvasRef.current;\n        if (!canvas) return;\n        const ctx = canvas.getContext(\"2d\");\n        if (!ctx) return;\n        const dpr = window.devicePixelRatio || 1;\n        canvas.width = dimensions.width * dpr;\n        canvas.height = dimensions.height * dpr;\n        canvas.style.width = \"\".concat(dimensions.width, \"px\");\n        canvas.style.height = \"\".concat(dimensions.height, \"px\");\n        ctx.scale(dpr, dpr);\n        ctx.clearRect(0, 0, dimensions.width, dimensions.height);\n        // Draw grid\n        ctx.strokeStyle = \"hsl(var(--border))\";\n        ctx.lineWidth = 0.5;\n        ctx.globalAlpha = 0.3;\n        for(let i = 0; i <= 10; i++){\n            const x = padding.left + i / 10 * (dimensions.width - padding.left - padding.right);\n            const y = padding.top + i / 10 * (dimensions.height - padding.top - padding.bottom);\n            ctx.beginPath();\n            ctx.moveTo(x, padding.top);\n            ctx.lineTo(x, dimensions.height - padding.bottom);\n            ctx.stroke();\n            ctx.beginPath();\n            ctx.moveTo(padding.left, y);\n            ctx.lineTo(dimensions.width - padding.right, y);\n            ctx.stroke();\n        }\n        ctx.globalAlpha = 1;\n        // Draw clusters\n        clusters.forEach((cluster, idx)=>{\n            if (cluster.pointIndices.length === 0) return;\n            const points = cluster.pointIndices.map((i)=>dataPoints[i]).filter(Boolean);\n            if (points.length === 0) return;\n            const xs = points.map((p)=>scaleX(p.x));\n            const ys = points.map((p)=>scaleY(p.y));\n            const centerX = xs.reduce((a, b)=>a + b, 0) / xs.length;\n            const centerY = ys.reduce((a, b)=>a + b, 0) / ys.length;\n            const maxDist = Math.max(...xs.map((x, i)=>Math.sqrt((x - centerX) ** 2 + (ys[i] - centerY) ** 2)));\n            const radius = maxDist + 30;\n            ctx.fillStyle = cluster.color.replace(\"hsl\", \"hsla\").replace(\")\", \", 0.08)\");\n            ctx.strokeStyle = cluster.color;\n            ctx.lineWidth = 3;\n            if (hoveredCluster === idx) {\n                ctx.fillStyle = cluster.color.replace(\"hsl\", \"hsla\").replace(\")\", \", 0.15)\");\n                ctx.shadowColor = cluster.color;\n                ctx.shadowBlur = 15;\n            }\n            ctx.beginPath();\n            ctx.arc(centerX, centerY, radius, 0, Math.PI * 2);\n            ctx.fill();\n            ctx.stroke();\n            ctx.shadowBlur = 0;\n        });\n        // Draw connections\n        ctx.strokeStyle = \"hsl(var(--primary))\";\n        ctx.lineWidth = 2;\n        ctx.globalAlpha = 0.6;\n        ctx.setLineDash([\n            4,\n            4\n        ]);\n        connections.forEach((param)=>{\n            let [i, j] = param;\n            const p1 = dataPoints[i];\n            const p2 = dataPoints[j];\n            if (!p1 || !p2) return;\n            ctx.beginPath();\n            ctx.moveTo(scaleX(p1.x), scaleY(p1.y));\n            ctx.lineTo(scaleX(p2.x), scaleY(p2.y));\n            ctx.stroke();\n        });\n        ctx.setLineDash([]);\n        ctx.globalAlpha = 1;\n        // Draw axes\n        ctx.strokeStyle = \"hsl(var(--foreground))\";\n        ctx.lineWidth = 2;\n        ctx.beginPath();\n        ctx.moveTo(padding.left, padding.top);\n        ctx.lineTo(padding.left, dimensions.height - padding.bottom);\n        ctx.lineTo(dimensions.width - padding.right, dimensions.height - padding.bottom);\n        ctx.stroke();\n        // Draw axis labels\n        ctx.fillStyle = \"hsl(var(--foreground))\";\n        ctx.font = \"14px Inter\";\n        ctx.textAlign = \"center\";\n        ctx.fillText(xLabel, dimensions.width / 2, dimensions.height - 20);\n        ctx.save();\n        ctx.translate(20, dimensions.height / 2);\n        ctx.rotate(-Math.PI / 2);\n        ctx.fillText(yLabel, 0, 0);\n        ctx.restore();\n    }, [\n        dataPoints,\n        clusters,\n        connections,\n        dimensions,\n        xLabel,\n        yLabel,\n        hoveredCluster\n    ]);\n    const handleMouseMove = (e)=>{\n        var _containerRef_current;\n        const rect = (_containerRef_current = containerRef.current) === null || _containerRef_current === void 0 ? void 0 : _containerRef_current.getBoundingClientRect();\n        if (!rect) return;\n        const x = e.clientX - rect.left;\n        const y = e.clientY - rect.top;\n        setMousePos({\n            x,\n            y\n        });\n        // Check for hovered points\n        let foundPoint = false;\n        for(let i = 0; i < dataPoints.length; i++){\n            const px = scaleX(dataPoints[i].x);\n            const py = scaleY(dataPoints[i].y);\n            const dist = Math.sqrt((px - x) ** 2 + (py - y) ** 2);\n            if (dist < 15) {\n                setHoveredPoint(i);\n                onPointHover === null || onPointHover === void 0 ? void 0 : onPointHover(dataPoints[i]);\n                foundPoint = true;\n                break;\n            }\n        }\n        if (!foundPoint) {\n            setHoveredPoint(null);\n            onPointHover === null || onPointHover === void 0 ? void 0 : onPointHover(null);\n        }\n        // Check for hovered clusters\n        let foundCluster = false;\n        clusters.forEach((cluster, idx)=>{\n            if (cluster.pointIndices.length === 0) return;\n            const points = cluster.pointIndices.map((i)=>dataPoints[i]).filter(Boolean);\n            if (points.length === 0) return;\n            const xs = points.map((p)=>scaleX(p.x));\n            const ys = points.map((p)=>scaleY(p.y));\n            const centerX = xs.reduce((a, b)=>a + b, 0) / xs.length;\n            const centerY = ys.reduce((a, b)=>a + b, 0) / ys.length;\n            const maxDist = Math.max(...xs.map((x, i)=>Math.sqrt((x - centerX) ** 2 + (ys[i] - centerY) ** 2)));\n            const radius = maxDist + 30;\n            const dist = Math.sqrt((centerX - x) ** 2 + (centerY - y) ** 2);\n            if (dist < radius && !foundPoint) {\n                setHoveredCluster(idx);\n                onClusterHover === null || onClusterHover === void 0 ? void 0 : onClusterHover(cluster);\n                foundCluster = true;\n            }\n        });\n        if (!foundCluster) {\n            setHoveredCluster(null);\n            if (!foundPoint) onClusterHover === null || onClusterHover === void 0 ? void 0 : onClusterHover(null);\n        }\n    };\n    const handleClick = (e)=>{\n        var _containerRef_current;\n        if (!addMode || !onAddPoint) return;\n        const rect = (_containerRef_current = containerRef.current) === null || _containerRef_current === void 0 ? void 0 : _containerRef_current.getBoundingClientRect();\n        if (!rect) return;\n        const clickX = e.clientX - rect.left;\n        const clickY = e.clientY - rect.top;\n        // Check if clicked within plot area\n        if (clickX >= padding.left && clickX <= dimensions.width - padding.right && clickY >= padding.top && clickY <= dimensions.height - padding.bottom) {\n            const dataX = inverseScaleX(clickX);\n            const dataY = inverseScaleY(clickY);\n            onAddPoint(dataX, dataY);\n        }\n    };\n    const IconComponent = datasetType === \"medical\" ? _barrel_optimize_names_MapPin_ShoppingBag_User_lucide_react__WEBPACK_IMPORTED_MODULE_2__[\"default\"] : datasetType === \"crime\" ? _barrel_optimize_names_MapPin_ShoppingBag_User_lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"] : _barrel_optimize_names_MapPin_ShoppingBag_User_lucide_react__WEBPACK_IMPORTED_MODULE_4__[\"default\"];\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: containerRef,\n        className: \"relative w-full bg-card rounded-md border border-card-border overflow-visible\",\n        onMouseMove: handleMouseMove,\n        onMouseLeave: ()=>{\n            setHoveredPoint(null);\n            setHoveredCluster(null);\n            onPointHover === null || onPointHover === void 0 ? void 0 : onPointHover(null);\n            onClusterHover === null || onClusterHover === void 0 ? void 0 : onClusterHover(null);\n        },\n        onClick: handleClick,\n        style: {\n            cursor: addMode ? \"crosshair\" : \"default\"\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                ref: canvasRef,\n                className: \"w-full\"\n            }, void 0, false, {\n                fileName: \"/Users/dharmikgalla/DHV-project-2/app/components/ScatterPlot.tsx\",\n                lineNumber: 327,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                className: \"absolute top-0 left-0 pointer-events-none\",\n                width: dimensions.width,\n                height: dimensions.height,\n                style: {\n                    overflow: \"visible\"\n                },\n                children: [\n                    dataPoints.map((point, idx)=>{\n                        const x = scaleX(point.x);\n                        const y = scaleY(point.y);\n                        const isHovered = hoveredPoint === idx;\n                        const cluster = clusters.find((c)=>c.pointIndices.includes(idx));\n                        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"g\", {\n                            transform: \"translate(\".concat(x, \", \").concat(y, \")\"),\n                            children: [\n                                isHovered && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                                    r: 18,\n                                    fill: \"none\",\n                                    stroke: \"hsl(var(--primary))\",\n                                    strokeWidth: 2,\n                                    opacity: 0.5,\n                                    className: \"animate-pulse\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/dharmikgalla/DHV-project-2/app/components/ScatterPlot.tsx\",\n                                    lineNumber: 345,\n                                    columnNumber: 17\n                                }, this),\n                                point.isNew && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                                    r: 20,\n                                    fill: \"none\",\n                                    stroke: \"hsl(var(--chart-5))\",\n                                    strokeWidth: 3,\n                                    opacity: 0.7,\n                                    className: \"animate-pulse\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/dharmikgalla/DHV-project-2/app/components/ScatterPlot.tsx\",\n                                    lineNumber: 355,\n                                    columnNumber: 17\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"foreignObject\", {\n                                    x: -12,\n                                    y: -12,\n                                    width: 24,\n                                    height: 24,\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(IconComponent, {\n                                        className: \"w-6 h-6 transition-all \".concat(isHovered ? \"scale-125\" : \"\"),\n                                        style: {\n                                            color: cluster ? cluster.color : \"hsl(var(--foreground))\",\n                                            filter: isHovered ? \"drop-shadow(0 0 4px currentColor)\" : \"none\"\n                                        }\n                                    }, void 0, false, {\n                                        fileName: \"/Users/dharmikgalla/DHV-project-2/app/components/ScatterPlot.tsx\",\n                                        lineNumber: 365,\n                                        columnNumber: 17\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/Users/dharmikgalla/DHV-project-2/app/components/ScatterPlot.tsx\",\n                                    lineNumber: 364,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, point.id, true, {\n                            fileName: \"/Users/dharmikgalla/DHV-project-2/app/components/ScatterPlot.tsx\",\n                            lineNumber: 343,\n                            columnNumber: 13\n                        }, this);\n                    }),\n                    addMode && mousePos.x > padding.left && mousePos.x < dimensions.width - padding.right && mousePos.y > padding.top && mousePos.y < dimensions.height - padding.bottom && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"g\", {\n                        transform: \"translate(\".concat(mousePos.x, \", \").concat(mousePos.y, \")\"),\n                        opacity: 0.5,\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"foreignObject\", {\n                            x: -12,\n                            y: -12,\n                            width: 24,\n                            height: 24,\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(IconComponent, {\n                                className: \"w-6 h-6\",\n                                style: {\n                                    color: \"hsl(var(--primary))\"\n                                }\n                            }, void 0, false, {\n                                fileName: \"/Users/dharmikgalla/DHV-project-2/app/components/ScatterPlot.tsx\",\n                                lineNumber: 382,\n                                columnNumber: 15\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/dharmikgalla/DHV-project-2/app/components/ScatterPlot.tsx\",\n                            lineNumber: 381,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/dharmikgalla/DHV-project-2/app/components/ScatterPlot.tsx\",\n                        lineNumber: 380,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/dharmikgalla/DHV-project-2/app/components/ScatterPlot.tsx\",\n                lineNumber: 330,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/dharmikgalla/DHV-project-2/app/components/ScatterPlot.tsx\",\n        lineNumber: 314,\n        columnNumber: 5\n    }, this);\n}\n_s(ScatterPlot, \"LpbhOkUcx6hnHiX2KWTRe/uzCPs=\");\n_c = ScatterPlot;\nvar _c;\n$RefreshReg$(_c, \"ScatterPlot\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/ScatterPlot.tsx\n"));

/***/ })

});