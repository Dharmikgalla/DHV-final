"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_app-pages-browser_app_App_tsx",{

/***/ "(app-pages-browser)/./app/components/Dendrogram.tsx":
/*!***************************************!*\
  !*** ./app/components/Dendrogram.tsx ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Dendrogram: function() { return /* binding */ Dendrogram; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$();\n\nfunction Dendrogram(param) {\n    let { tree, currentHeight, labels, colors, cutLine, onCutLineChange } = param;\n    _s();\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [dimensions, setDimensions] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        width: 400,\n        height: 600\n    });\n    const [isDragging, setIsDragging] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const padding = {\n        top: 20,\n        right: 20,\n        bottom: 40,\n        left: 80\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const updateDimensions = ()=>{\n            if (containerRef.current) {\n                const { width, height } = containerRef.current.getBoundingClientRect();\n                setDimensions({\n                    width,\n                    height\n                });\n            }\n        };\n        updateDimensions();\n        window.addEventListener(\"resize\", updateDimensions);\n        return ()=>window.removeEventListener(\"resize\", updateDimensions);\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const canvas = canvasRef.current;\n        if (!canvas || !tree) return;\n        const ctx = canvas.getContext(\"2d\");\n        if (!ctx) return;\n        const dpr = window.devicePixelRatio || 1;\n        canvas.width = dimensions.width * dpr;\n        canvas.height = dimensions.height * dpr;\n        canvas.style.width = \"\".concat(dimensions.width, \"px\");\n        canvas.style.height = \"\".concat(dimensions.height, \"px\");\n        ctx.scale(dpr, dpr);\n        ctx.clearRect(0, 0, dimensions.width, dimensions.height);\n        // Calculate leaf positions\n        const leaves = [];\n        const getLeaves = (node)=>{\n            if (node.label) {\n                leaves.push(node.label);\n            } else {\n                if (node.left) getLeaves(node.left);\n                if (node.right) getLeaves(node.right);\n            }\n        };\n        getLeaves(tree);\n        const maxHeight = getMaxHeight(tree);\n        const leafSpacing = (dimensions.height - padding.top - padding.bottom) / Math.max(leaves.length - 1, 1);\n        const scaleX = (height)=>{\n            return padding.left + height / (maxHeight || 1) * (dimensions.width - padding.left - padding.right);\n        };\n        let leafIndex = 0;\n        const drawNode = (node, y)=>{\n            if (node.label) {\n                // Leaf node\n                const yPos = padding.top + leafIndex * leafSpacing;\n                leafIndex++;\n                // Draw label\n                ctx.fillStyle = node.color || \"hsl(var(--foreground))\";\n                ctx.font = \"12px JetBrains Mono\";\n                ctx.textAlign = \"right\";\n                ctx.fillText(node.label, padding.left - 10, yPos + 4);\n                // Draw horizontal line to axis\n                ctx.strokeStyle = node.color || \"hsl(var(--muted-foreground))\";\n                ctx.lineWidth = 2;\n                ctx.beginPath();\n                ctx.moveTo(padding.left, yPos);\n                ctx.lineTo(scaleX(0), yPos);\n                ctx.stroke();\n                // Draw node circle\n                ctx.fillStyle = node.color || \"hsl(var(--foreground))\";\n                ctx.beginPath();\n                ctx.arc(padding.left, yPos, 3, 0, Math.PI * 2);\n                ctx.fill();\n                return yPos;\n            }\n            // Internal node\n            const leftY = node.left ? drawNode(node.left, y) : y;\n            const rightY = node.right ? drawNode(node.right, y + 1) : y;\n            const midY = (leftY + rightY) / 2;\n            const x = scaleX(node.height);\n            // Only draw if this merge has occurred based on currentHeight\n            if (node.height <= currentHeight) {\n                ctx.strokeStyle = \"hsl(var(--primary))\";\n                ctx.lineWidth = 2;\n                // Draw vertical line connecting children\n                ctx.beginPath();\n                ctx.moveTo(x, leftY);\n                ctx.lineTo(x, rightY);\n                ctx.stroke();\n                // Draw horizontal lines to children\n                const childX = node.left ? scaleX(node.left.height) : padding.left;\n                ctx.beginPath();\n                ctx.moveTo(childX, leftY);\n                ctx.lineTo(x, leftY);\n                ctx.stroke();\n                const childX2 = node.right ? scaleX(node.right.height) : padding.left;\n                ctx.beginPath();\n                ctx.moveTo(childX2, rightY);\n                ctx.lineTo(x, rightY);\n                ctx.stroke();\n                // Draw merge node\n                ctx.fillStyle = \"hsl(var(--primary))\";\n                ctx.beginPath();\n                ctx.arc(x, midY, 4, 0, Math.PI * 2);\n                ctx.fill();\n            }\n            return midY;\n        };\n        drawNode(tree, 0);\n        // Draw axis\n        ctx.strokeStyle = \"hsl(var(--foreground))\";\n        ctx.lineWidth = 2;\n        ctx.beginPath();\n        ctx.moveTo(padding.left, padding.top);\n        ctx.lineTo(padding.left, dimensions.height - padding.bottom);\n        ctx.stroke();\n        // Draw axis label\n        ctx.fillStyle = \"hsl(var(--foreground))\";\n        ctx.font = \"12px Inter\";\n        ctx.textAlign = \"center\";\n        ctx.fillText(\"Merge Distance\", dimensions.width / 2, dimensions.height - 10);\n        // Draw cut line if provided\n        if (cutLine !== undefined) {\n            const cutX = scaleX(cutLine);\n            ctx.strokeStyle = \"hsl(var(--destructive))\";\n            ctx.lineWidth = 3;\n            ctx.setLineDash([\n                5,\n                5\n            ]);\n            ctx.beginPath();\n            ctx.moveTo(cutX, padding.top);\n            ctx.lineTo(cutX, dimensions.height - padding.bottom);\n            ctx.stroke();\n            ctx.setLineDash([]);\n            // Draw cut line label\n            ctx.fillStyle = \"hsl(var(--destructive))\";\n            ctx.font = \"bold 12px Inter\";\n            ctx.textAlign = \"left\";\n            ctx.fillText(\"Cut: \".concat(cutLine.toFixed(2)), cutX + 5, padding.top + 15);\n        }\n    }, [\n        tree,\n        currentHeight,\n        dimensions,\n        labels,\n        colors,\n        cutLine\n    ]);\n    const handleMouseDown = (e)=>{\n        var _canvasRef_current;\n        if (!onCutLineChange || !tree) return;\n        const rect = (_canvasRef_current = canvasRef.current) === null || _canvasRef_current === void 0 ? void 0 : _canvasRef_current.getBoundingClientRect();\n        if (!rect) return;\n        const x = e.clientX - rect.left;\n        const maxHeight = getMaxHeight(tree);\n        const scaleX = (height)=>{\n            return padding.left + height / (maxHeight || 1) * (dimensions.width - padding.left - padding.right);\n        };\n        // Convert mouse X to height value\n        const height = (x - padding.left) / (dimensions.width - padding.left - padding.right) * maxHeight;\n        onCutLineChange(Math.max(0, Math.min(maxHeight, height)));\n        setIsDragging(true);\n    };\n    const handleMouseMove = (e)=>{\n        var _canvasRef_current;\n        if (!isDragging || !onCutLineChange || !tree) return;\n        const rect = (_canvasRef_current = canvasRef.current) === null || _canvasRef_current === void 0 ? void 0 : _canvasRef_current.getBoundingClientRect();\n        if (!rect) return;\n        const x = e.clientX - rect.left;\n        const maxHeight = getMaxHeight(tree);\n        const height = (x - padding.left) / (dimensions.width - padding.left - padding.right) * maxHeight;\n        onCutLineChange(Math.max(0, Math.min(maxHeight, height)));\n    };\n    const handleMouseUp = ()=>{\n        setIsDragging(false);\n    };\n    const getMaxHeight = (node)=>{\n        if (!node.left && !node.right) return 0;\n        const leftHeight = node.left ? getMaxHeight(node.left) : 0;\n        const rightHeight = node.right ? getMaxHeight(node.right) : 0;\n        return Math.max(node.height, leftHeight, rightHeight);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: containerRef,\n        className: \"w-full h-full bg-card rounded-md border border-card-border border-l-4 border-l-primary/30\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"p-4 border-b border-border\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                        className: \"text-lg font-semibold\",\n                        children: \"Dendrogram Tree\"\n                    }, void 0, false, {\n                        fileName: \"/Users/dharmikgalla/DHV-project-2/app/components/Dendrogram.tsx\",\n                        lineNumber: 228,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-sm text-muted-foreground\",\n                        children: \"Visual hierarchy of cluster merges\"\n                    }, void 0, false, {\n                        fileName: \"/Users/dharmikgalla/DHV-project-2/app/components/Dendrogram.tsx\",\n                        lineNumber: 229,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/dharmikgalla/DHV-project-2/app/components/Dendrogram.tsx\",\n                lineNumber: 227,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"p-4\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                    ref: canvasRef,\n                    className: \"w-full\"\n                }, void 0, false, {\n                    fileName: \"/Users/dharmikgalla/DHV-project-2/app/components/Dendrogram.tsx\",\n                    lineNumber: 232,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/dharmikgalla/DHV-project-2/app/components/Dendrogram.tsx\",\n                lineNumber: 231,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/dharmikgalla/DHV-project-2/app/components/Dendrogram.tsx\",\n        lineNumber: 226,\n        columnNumber: 5\n    }, this);\n}\n_s(Dendrogram, \"HO5lprfuEIJw0rKSFcIKKo/XCio=\");\n_c = Dendrogram;\nvar _c;\n$RefreshReg$(_c, \"Dendrogram\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/Dendrogram.tsx\n"));

/***/ })

});