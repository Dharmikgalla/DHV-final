"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_app-pages-browser_app_App_tsx",{

/***/ "(app-pages-browser)/./app/lib/datasets.ts":
/*!*****************************!*\
  !*** ./app/lib/datasets.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DATASET_CONFIGS: function() { return /* binding */ DATASET_CONFIGS; },\n/* harmony export */   convertToDataPoints: function() { return /* binding */ convertToDataPoints; },\n/* harmony export */   convertToDataPointsWithAxes: function() { return /* binding */ convertToDataPointsWithAxes; },\n/* harmony export */   crimeConfig: function() { return /* binding */ crimeConfig; },\n/* harmony export */   crimeData: function() { return /* binding */ crimeData; },\n/* harmony export */   customerConfig: function() { return /* binding */ customerConfig; },\n/* harmony export */   customerData: function() { return /* binding */ customerData; },\n/* harmony export */   medicalConfig: function() { return /* binding */ medicalConfig; },\n/* harmony export */   medicalData: function() { return /* binding */ medicalData; }\n/* harmony export */ });\n// Medical Dataset Configuration\nconst medicalConfig = {\n    id: \"medical\",\n    name: \"Medical Patients\",\n    icon: \"user\",\n    xAxis: {\n        label: \"Blood Pressure (Systolic)\",\n        key: \"Blood_Pressure_Sys\"\n    },\n    yAxis: {\n        label: \"Temperature (\\xb0F)\",\n        key: \"Temperature_F\"\n    },\n    availableAxes: [\n        {\n            label: \"Blood Pressure (Systolic)\",\n            key: \"Blood_Pressure_Sys\",\n            range: [\n                100,\n                160\n            ]\n        },\n        {\n            label: \"Blood Pressure (Diastolic)\",\n            key: \"Blood_Pressure_Dia\",\n            range: [\n                70,\n                100\n            ]\n        },\n        {\n            label: \"Temperature (\\xb0F)\",\n            key: \"Temperature_F\",\n            range: [\n                97,\n                103\n            ]\n        },\n        {\n            label: \"Sugar Level (mg/dL)\",\n            key: \"Sugar_Level_mg_dL\",\n            range: [\n                80,\n                200\n            ]\n        },\n        {\n            label: \"Age\",\n            key: \"Age\",\n            range: [\n                20,\n                70\n            ]\n        }\n    ],\n    tooltipFields: [\n        {\n            label: \"Age\",\n            key: \"Age\",\n            format: (v)=>\"\".concat(v, \" years\")\n        },\n        {\n            label: \"Temperature\",\n            key: \"Temperature_F\",\n            format: (v)=>\"\".concat(v, \"\\xb0F\")\n        },\n        {\n            label: \"BP (Sys/Dia)\",\n            key: \"Blood_Pressure_Sys\",\n            format: (v, data)=>\"\".concat(v, \"/\").concat(data.Blood_Pressure_Dia)\n        },\n        {\n            label: \"Sugar Level\",\n            key: \"Sugar_Level_mg_dL\",\n            format: (v)=>\"\".concat(v, \" mg/dL\")\n        }\n    ],\n    clusterColors: [\n        \"hsl(350, 75%, 60%)\",\n        \"hsl(220, 75%, 60%)\",\n        \"hsl(160, 70%, 55%)\",\n        \"hsl(140, 60%, 55%)\"\n    ],\n    getDiagnosis: (stats)=>{\n        const avgTemp = stats.Temperature_F || 0;\n        const avgBP = stats.Blood_Pressure_Sys || 0;\n        const avgSugar = stats.Sugar_Level_mg_dL || 0;\n        if (avgTemp > 100.5 && avgBP < 135) return \"Viral Infection Group\";\n        if (avgBP > 145 && avgSugar > 165) return \"Cardiac & Metabolic Risk\";\n        if (avgSugar > 150 && avgTemp < 99) return \"Metabolic Risk Group\";\n        return \"Normal/Stable Group\";\n    },\n    getStoryStep: (step, algorithm)=>{\n        const agglomerativeStories = [\n            \"All patients arrive at the hospital with their unique symptoms and medical readings.\",\n            \"The doctor examines each patient's vitals separately — every patient stands alone.\",\n            \"Now, the doctor compares medical profiles to find two patients with the most similar conditions.\",\n            \"Those two patients are grouped together for similar treatment and observation.\",\n            \"The doctor reassesses all remaining patients and groups the next closest pair based on vital similarity.\",\n            \"Gradually, small patient groups start merging into larger health clusters.\",\n            \"Soon, clusters represent different medical condition types — viral infection, normal, and metabolic risk.\",\n            \"The merging continues until all patients are connected under one large medical network called mixed symptoms cluster\",\n            \"The dendrogram tree shows how similar patients join together step by step.\",\n            \"Finally, the doctor 'cuts' the tree to focus on meaningful clusters of patients requiring similar care.\"\n        ];\n        const divisiveStories = [\n            \"The hospital starts with all patients in one large group — everyone under initial observation.\",\n            \"Doctors notice some patients have vastly different vitals, so they split the group into two — healthy and concerning.\",\n            \"They focus on the 'concerning' group to find further differences in blood pressure and sugar levels.\",\n            \"That group is again divided into subgroups — such as high-sugar vs high-fever patients.\",\n            \"Each split reveals clearer distinctions among patient conditions.\",\n            \"Doctors keep dividing until every patient has their own distinct health profile.\",\n            \"The dendrogram now represents this top-down diagnosis process.\",\n            \"The doctor draws a line through it to identify critical clusters that need special care.\"\n        ];\n        return algorithm === \"agglomerative\" ? agglomerativeStories[Math.min(step, agglomerativeStories.length - 1)] : divisiveStories[Math.min(step, divisiveStories.length - 1)];\n    }\n};\n// Crime Dataset Configuration\nconst crimeConfig = {\n    id: \"crime\",\n    name: \"Crime Sites\",\n    icon: \"map-pin\",\n    xAxis: {\n        label: \"Longitude\",\n        key: \"Longitude\"\n    },\n    yAxis: {\n        label: \"Latitude\",\n        key: \"Latitude\"\n    },\n    availableAxes: [\n        {\n            label: \"Longitude\",\n            key: \"Longitude\",\n            range: [\n                19.0,\n                19.2\n            ]\n        },\n        {\n            label: \"Latitude\",\n            key: \"Latitude\",\n            range: [\n                72.8,\n                73.0\n            ]\n        },\n        {\n            label: \"Severity Level\",\n            key: \"Severity_Level\",\n            range: [\n                1,\n                5\n            ]\n        }\n    ],\n    tooltipFields: [\n        {\n            label: \"Crime Type\",\n            key: \"Crime_Type\"\n        },\n        {\n            label: \"Time\",\n            key: \"Time_of_Day\"\n        },\n        {\n            label: \"Severity\",\n            key: \"Severity_Level\",\n            format: (v)=>\"Level \".concat(v)\n        },\n        {\n            label: \"Reported By\",\n            key: \"Reported_By\"\n        }\n    ],\n    clusterColors: [\n        \"hsl(355, 85%, 50%)\",\n        \"hsl(30, 85%, 55%)\",\n        \"hsl(55, 75%, 60%)\",\n        \"hsl(210, 85%, 55%)\"\n    ],\n    getDiagnosis: (stats)=>{\n        const avgSeverity = stats.Severity_Level || 0;\n        if (avgSeverity >= 4.5) return \"High-Risk Crime Hotspot\";\n        if (avgSeverity >= 3) return \"Medium-Risk Area\";\n        return \"Low-Risk Zone\";\n    },\n    getStoryStep: (step, algorithm)=>{\n        const agglomerativeStories = [\n            \"Every crime incident occurs independently across the city.\",\n            \"Investigators treat each crime as a separate case at first.\",\n            \"They analyze all cases to find two incidents that are geographically and behaviorally similar.\",\n            \"Those two crime scenes are linked as potentially related cases.\",\n            \"The investigation then finds the next closest pair of similar crimes.\",\n            \"Gradually, clusters of related crimes start forming — theft rings, assault zones, or fraud networks.\",\n            \"The city map now begins to reveal crime hotspots.\",\n            \"Eventually, all incidents connect into one large citywide crime map.\",\n            \"The dendrogram displays how small cases grew into major crime clusters.\",\n            \"Police cut the dendrogram to isolate specific regional crime patterns for focused investigation.\"\n        ];\n        const divisiveStories = [\n            \"At first, the police view all city crimes as one big dataset.\",\n            \"They spot major differences — violent vs non-violent crimes — and split them apart.\",\n            \"Within violent crimes, they separate robbery, assault, and murder cases.\",\n            \"Within non-violent crimes, they split fraud and theft groups.\",\n            \"Each split brings more clarity to the crime network.\",\n            \"Eventually, every incident is isolated with its own crime type and location.\",\n            \"The dendrogram now tells a story from citywide crimes to specific cases.\",\n            \"By cutting it, investigators focus on actionable clusters like theft hotspots or fraud centers.\"\n        ];\n        return algorithm === \"agglomerative\" ? agglomerativeStories[Math.min(step, agglomerativeStories.length - 1)] : divisiveStories[Math.min(step, divisiveStories.length - 1)];\n    }\n};\n// Customer Dataset Configuration\nconst customerConfig = {\n    id: \"customer\",\n    name: \"Customer Segmentation\",\n    icon: \"shopping-bag\",\n    xAxis: {\n        label: \"Annual Income ($k)\",\n        key: \"Annual_Income_kUSD\"\n    },\n    yAxis: {\n        label: \"Spending Score\",\n        key: \"Spending_Score\"\n    },\n    availableAxes: [\n        {\n            label: \"Annual Income ($k)\",\n            key: \"Annual_Income_kUSD\",\n            range: [\n                10,\n                120\n            ]\n        },\n        {\n            label: \"Spending Score\",\n            key: \"Spending_Score\",\n            range: [\n                0,\n                100\n            ]\n        },\n        {\n            label: \"Age\",\n            key: \"Age\",\n            range: [\n                20,\n                70\n            ]\n        },\n        {\n            label: \"Loyalty Years\",\n            key: \"Loyalty_Years\",\n            range: [\n                0,\n                12\n            ]\n        }\n    ],\n    tooltipFields: [\n        {\n            label: \"Age\",\n            key: \"Age\",\n            format: (v)=>\"\".concat(v, \" years\")\n        },\n        {\n            label: \"Income\",\n            key: \"Annual_Income_kUSD\",\n            format: (v)=>\"$\".concat(v, \"k\")\n        },\n        {\n            label: \"Spending Score\",\n            key: \"Spending_Score\",\n            format: (v)=>\"\".concat(v, \"/100\")\n        },\n        {\n            label: \"Loyalty\",\n            key: \"Loyalty_Years\",\n            format: (v)=>\"\".concat(v, \" years\")\n        }\n    ],\n    clusterColors: [\n        \"hsl(280, 80%, 65%)\",\n        \"hsl(200, 75%, 60%)\",\n        \"hsl(330, 75%, 65%)\",\n        \"hsl(160, 70%, 55%)\"\n    ],\n    getDiagnosis: (stats)=>{\n        const avgIncome = stats.Annual_Income_kUSD || 0;\n        const avgSpending = stats.Spending_Score || 0;\n        if (avgIncome > 80 && avgSpending < 45) return \"Luxury Potential Segment\";\n        if (avgSpending > 75 && avgIncome < 50) return \"Fashion Forward Enthusiasts\";\n        if (avgIncome > 60 && avgSpending > 60) return \"High-Value Customers\";\n        return \"Value-Conscious Shoppers\";\n    },\n    getStoryStep: (step, algorithm)=>{\n        const agglomerativeStories = [\n            \"Each customer walks into the store with unique preferences and spending habits.\",\n            \"Initially, the marketing team views every customer as a separate profile.\",\n            \"They compare customers to find two with the most similar income and spending behavior.\",\n            \"These two customers are grouped into a small segment for targeted offers.\",\n            \"Next, similar pairs of customers start merging into larger segments.\",\n            \"Gradually, clear patterns emerge — budget buyers, luxury shoppers, and loyal customers.\",\n            \"Clusters now represent well-defined customer groups.\",\n            \"All profiles eventually combine into a complete customer network.\",\n            \"The dendrogram shows how unique buyers merge into audience segments.\",\n            \"Marketers cut the tree to focus on the most valuable customer groups.\"\n        ];\n        const divisiveStories = [\n            \"The company begins with all customers in one large group.\",\n            \"They first split them into two — low-spending vs high-spending customers.\",\n            \"They further divide each group based on loyalty and income.\",\n            \"The segmentation continues until each buyer profile is unique.\",\n            \"Each new split uncovers deeper behavioral differences.\",\n            \"Soon, patterns like 'occasional buyers' or 'premium shoppers' emerge.\",\n            \"The dendrogram visually narrates this top-down segmentation journey.\",\n            \"The marketing team cuts it at optimal depth to target profitable segments.\"\n        ];\n        return algorithm === \"agglomerative\" ? agglomerativeStories[Math.min(step, agglomerativeStories.length - 1)] : divisiveStories[Math.min(step, divisiveStories.length - 1)];\n    }\n};\nconst DATASET_CONFIGS = {\n    medical: medicalConfig,\n    crime: crimeConfig,\n    customer: customerConfig\n};\n// Load CSV data\nconst medicalData = [\n    {\n        Patient_ID: \"P1\",\n        Age: 25,\n        Temperature_F: 98.6,\n        Blood_Pressure_Sys: 120,\n        Blood_Pressure_Dia: 80,\n        Sugar_Level_mg_dL: 90,\n        Symptoms: \"Mild fever, fatigue\"\n    },\n    {\n        Patient_ID: \"P2\",\n        Age: 27,\n        Temperature_F: 99.1,\n        Blood_Pressure_Sys: 118,\n        Blood_Pressure_Dia: 78,\n        Sugar_Level_mg_dL: 95,\n        Symptoms: \"Mild fever, cough\"\n    },\n    {\n        Patient_ID: \"P3\",\n        Age: 35,\n        Temperature_F: 101.5,\n        Blood_Pressure_Sys: 130,\n        Blood_Pressure_Dia: 85,\n        Sugar_Level_mg_dL: 100,\n        Symptoms: \"High fever, body pain\"\n    },\n    {\n        Patient_ID: \"P4\",\n        Age: 50,\n        Temperature_F: 97.8,\n        Blood_Pressure_Sys: 140,\n        Blood_Pressure_Dia: 90,\n        Sugar_Level_mg_dL: 160,\n        Symptoms: \"Normal, slight fatigue\"\n    },\n    {\n        Patient_ID: \"P5\",\n        Age: 52,\n        Temperature_F: 98.2,\n        Blood_Pressure_Sys: 135,\n        Blood_Pressure_Dia: 88,\n        Sugar_Level_mg_dL: 155,\n        Symptoms: \"Normal, mild headache\"\n    },\n    {\n        Patient_ID: \"P6\",\n        Age: 48,\n        Temperature_F: 102.0,\n        Blood_Pressure_Sys: 145,\n        Blood_Pressure_Dia: 92,\n        Sugar_Level_mg_dL: 170,\n        Symptoms: \"High fever, cough, fatigue\"\n    },\n    {\n        Patient_ID: \"P7\",\n        Age: 60,\n        Temperature_F: 100.8,\n        Blood_Pressure_Sys: 150,\n        Blood_Pressure_Dia: 95,\n        Sugar_Level_mg_dL: 180,\n        Symptoms: \"High BP, high sugar\"\n    },\n    {\n        Patient_ID: \"P8\",\n        Age: 62,\n        Temperature_F: 101.2,\n        Blood_Pressure_Sys: 155,\n        Blood_Pressure_Dia: 98,\n        Sugar_Level_mg_dL: 185,\n        Symptoms: \"High BP, high sugar, dizziness\"\n    }\n];\nconst crimeData = [\n    {\n        Crime_ID: \"C1\",\n        Latitude: 19.07,\n        Longitude: 72.87,\n        Crime_Type: \"Theft\",\n        Time_of_Day: \"Night\",\n        Severity_Level: 3,\n        Reported_By: \"Citizen\"\n    },\n    {\n        Crime_ID: \"C2\",\n        Latitude: 19.05,\n        Longitude: 72.85,\n        Crime_Type: \"Assault\",\n        Time_of_Day: \"Evening\",\n        Severity_Level: 2,\n        Reported_By: \"Police Patrol\"\n    },\n    {\n        Crime_ID: \"C3\",\n        Latitude: 19.09,\n        Longitude: 72.84,\n        Crime_Type: \"Burglary\",\n        Time_of_Day: \"Morning\",\n        Severity_Level: 4,\n        Reported_By: \"Citizen\"\n    },\n    {\n        Crime_ID: \"C4\",\n        Latitude: 19.11,\n        Longitude: 72.89,\n        Crime_Type: \"Theft\",\n        Time_of_Day: \"Afternoon\",\n        Severity_Level: 3,\n        Reported_By: \"Citizen\"\n    },\n    {\n        Crime_ID: \"C5\",\n        Latitude: 19.12,\n        Longitude: 72.91,\n        Crime_Type: \"Robbery\",\n        Time_of_Day: \"Night\",\n        Severity_Level: 5,\n        Reported_By: \"Police Patrol\"\n    },\n    {\n        Crime_ID: \"C6\",\n        Latitude: 19.13,\n        Longitude: 72.92,\n        Crime_Type: \"Assault\",\n        Time_of_Day: \"Night\",\n        Severity_Level: 2,\n        Reported_By: \"Citizen\"\n    },\n    {\n        Crime_ID: \"C7\",\n        Latitude: 19.08,\n        Longitude: 72.83,\n        Crime_Type: \"Theft\",\n        Time_of_Day: \"Evening\",\n        Severity_Level: 3,\n        Reported_By: \"Citizen\"\n    },\n    {\n        Crime_ID: \"C8\",\n        Latitude: 19.06,\n        Longitude: 72.86,\n        Crime_Type: \"Fraud\",\n        Time_of_Day: \"Morning\",\n        Severity_Level: 1,\n        Reported_By: \"Online\"\n    },\n    {\n        Crime_ID: \"C9\",\n        Latitude: 19.04,\n        Longitude: 72.88,\n        Crime_Type: \"Theft\",\n        Time_of_Day: \"Afternoon\",\n        Severity_Level: 2,\n        Reported_By: \"Citizen\"\n    },\n    {\n        Crime_ID: \"C10\",\n        Latitude: 19.1,\n        Longitude: 72.9,\n        Crime_Type: \"Murder\",\n        Time_of_Day: \"Night\",\n        Severity_Level: 5,\n        Reported_By: \"Police Patrol\"\n    },\n    {\n        Crime_ID: \"C11\",\n        Latitude: 19.15,\n        Longitude: 72.93,\n        Crime_Type: \"Burglary\",\n        Time_of_Day: \"Evening\",\n        Severity_Level: 4,\n        Reported_By: \"Online\"\n    },\n    {\n        Crime_ID: \"C12\",\n        Latitude: 19.14,\n        Longitude: 72.94,\n        Crime_Type: \"Assault\",\n        Time_of_Day: \"Morning\",\n        Severity_Level: 3,\n        Reported_By: \"Citizen\"\n    },\n    {\n        Crime_ID: \"C13\",\n        Latitude: 19.16,\n        Longitude: 72.95,\n        Crime_Type: \"Robbery\",\n        Time_of_Day: \"Night\",\n        Severity_Level: 5,\n        Reported_By: \"Police Patrol\"\n    },\n    {\n        Crime_ID: \"C14\",\n        Latitude: 19.03,\n        Longitude: 72.82,\n        Crime_Type: \"Fraud\",\n        Time_of_Day: \"Afternoon\",\n        Severity_Level: 2,\n        Reported_By: \"Citizen\"\n    },\n    {\n        Crime_ID: \"C15\",\n        Latitude: 19.02,\n        Longitude: 72.81,\n        Crime_Type: \"Theft\",\n        Time_of_Day: \"Morning\",\n        Severity_Level: 1,\n        Reported_By: \"Online\"\n    },\n    {\n        Crime_ID: \"C16\",\n        Latitude: 19.17,\n        Longitude: 72.96,\n        Crime_Type: \"Assault\",\n        Time_of_Day: \"Evening\",\n        Severity_Level: 3,\n        Reported_By: \"Citizen\"\n    },\n    {\n        Crime_ID: \"C17\",\n        Latitude: 19.18,\n        Longitude: 72.97,\n        Crime_Type: \"Murder\",\n        Time_of_Day: \"Night\",\n        Severity_Level: 5,\n        Reported_By: \"Police Patrol\"\n    },\n    {\n        Crime_ID: \"C18\",\n        Latitude: 19.01,\n        Longitude: 72.8,\n        Crime_Type: \"Fraud\",\n        Time_of_Day: \"Afternoon\",\n        Severity_Level: 1,\n        Reported_By: \"Online\"\n    },\n    {\n        Crime_ID: \"C19\",\n        Latitude: 19.19,\n        Longitude: 72.98,\n        Crime_Type: \"Burglary\",\n        Time_of_Day: \"Night\",\n        Severity_Level: 4,\n        Reported_By: \"Citizen\"\n    },\n    {\n        Crime_ID: \"C20\",\n        Latitude: 19.2,\n        Longitude: 72.99,\n        Crime_Type: \"Robbery\",\n        Time_of_Day: \"Evening\",\n        Severity_Level: 5,\n        Reported_By: \"Police Patrol\"\n    }\n];\nconst customerData = [\n    {\n        Customer_ID: \"CU1\",\n        Age: 22,\n        Annual_Income_kUSD: 15,\n        Spending_Score: 82,\n        Loyalty_Years: 1,\n        Preferred_Category: \"Fashion\"\n    },\n    {\n        Customer_ID: \"CU2\",\n        Age: 45,\n        Annual_Income_kUSD: 35,\n        Spending_Score: 55,\n        Loyalty_Years: 5,\n        Preferred_Category: \"Electronics\"\n    },\n    {\n        Customer_ID: \"CU3\",\n        Age: 35,\n        Annual_Income_kUSD: 60,\n        Spending_Score: 70,\n        Loyalty_Years: 3,\n        Preferred_Category: \"Groceries\"\n    },\n    {\n        Customer_ID: \"CU4\",\n        Age: 28,\n        Annual_Income_kUSD: 20,\n        Spending_Score: 90,\n        Loyalty_Years: 2,\n        Preferred_Category: \"Fashion\"\n    },\n    {\n        Customer_ID: \"CU5\",\n        Age: 52,\n        Annual_Income_kUSD: 85,\n        Spending_Score: 40,\n        Loyalty_Years: 7,\n        Preferred_Category: \"Luxury\"\n    },\n    {\n        Customer_ID: \"CU6\",\n        Age: 41,\n        Annual_Income_kUSD: 70,\n        Spending_Score: 60,\n        Loyalty_Years: 4,\n        Preferred_Category: \"Groceries\"\n    },\n    {\n        Customer_ID: \"CU7\",\n        Age: 30,\n        Annual_Income_kUSD: 40,\n        Spending_Score: 75,\n        Loyalty_Years: 3,\n        Preferred_Category: \"Fashion\"\n    },\n    {\n        Customer_ID: \"CU8\",\n        Age: 48,\n        Annual_Income_kUSD: 55,\n        Spending_Score: 65,\n        Loyalty_Years: 6,\n        Preferred_Category: \"Electronics\"\n    },\n    {\n        Customer_ID: \"CU9\",\n        Age: 25,\n        Annual_Income_kUSD: 18,\n        Spending_Score: 85,\n        Loyalty_Years: 1,\n        Preferred_Category: \"Fashion\"\n    },\n    {\n        Customer_ID: \"CU10\",\n        Age: 33,\n        Annual_Income_kUSD: 25,\n        Spending_Score: 88,\n        Loyalty_Years: 2,\n        Preferred_Category: \"Groceries\"\n    },\n    {\n        Customer_ID: \"CU11\",\n        Age: 55,\n        Annual_Income_kUSD: 95,\n        Spending_Score: 35,\n        Loyalty_Years: 8,\n        Preferred_Category: \"Luxury\"\n    },\n    {\n        Customer_ID: \"CU12\",\n        Age: 60,\n        Annual_Income_kUSD: 100,\n        Spending_Score: 20,\n        Loyalty_Years: 10,\n        Preferred_Category: \"Luxury\"\n    },\n    {\n        Customer_ID: \"CU13\",\n        Age: 27,\n        Annual_Income_kUSD: 22,\n        Spending_Score: 92,\n        Loyalty_Years: 1,\n        Preferred_Category: \"Fashion\"\n    },\n    {\n        Customer_ID: \"CU14\",\n        Age: 31,\n        Annual_Income_kUSD: 30,\n        Spending_Score: 78,\n        Loyalty_Years: 3,\n        Preferred_Category: \"Fashion\"\n    },\n    {\n        Customer_ID: \"CU15\",\n        Age: 44,\n        Annual_Income_kUSD: 65,\n        Spending_Score: 68,\n        Loyalty_Years: 5,\n        Preferred_Category: \"Electronics\"\n    },\n    {\n        Customer_ID: \"CU16\",\n        Age: 38,\n        Annual_Income_kUSD: 45,\n        Spending_Score: 72,\n        Loyalty_Years: 4,\n        Preferred_Category: \"Groceries\"\n    },\n    {\n        Customer_ID: \"CU17\",\n        Age: 50,\n        Annual_Income_kUSD: 80,\n        Spending_Score: 45,\n        Loyalty_Years: 7,\n        Preferred_Category: \"Luxury\"\n    },\n    {\n        Customer_ID: \"CU18\",\n        Age: 62,\n        Annual_Income_kUSD: 110,\n        Spending_Score: 25,\n        Loyalty_Years: 9,\n        Preferred_Category: \"Luxury\"\n    },\n    {\n        Customer_ID: \"CU19\",\n        Age: 40,\n        Annual_Income_kUSD: 50,\n        Spending_Score: 60,\n        Loyalty_Years: 6,\n        Preferred_Category: \"Electronics\"\n    },\n    {\n        Customer_ID: \"CU20\",\n        Age: 29,\n        Annual_Income_kUSD: 28,\n        Spending_Score: 80,\n        Loyalty_Years: 2,\n        Preferred_Category: \"Fashion\"\n    }\n];\nfunction convertToDataPoints(dataset) {\n    const config = DATASET_CONFIGS[dataset];\n    switch(dataset){\n        case \"medical\":\n            return medicalData.map((patient)=>({\n                    id: patient.Patient_ID,\n                    x: patient[config.xAxis.key],\n                    y: patient[config.yAxis.key],\n                    data: patient\n                }));\n        case \"crime\":\n            return crimeData.map((crime)=>({\n                    id: crime.Crime_ID,\n                    x: crime[config.xAxis.key],\n                    y: crime[config.yAxis.key],\n                    data: crime\n                }));\n        case \"customer\":\n            return customerData.map((customer)=>({\n                    id: customer.Customer_ID,\n                    x: customer[config.xAxis.key],\n                    y: customer[config.yAxis.key],\n                    data: customer\n                }));\n    }\n}\nfunction convertToDataPointsWithAxes(dataset, xAxisKey, yAxisKey) {\n    switch(dataset){\n        case \"medical\":\n            return medicalData.map((patient)=>({\n                    id: patient.Patient_ID,\n                    x: patient[xAxisKey],\n                    y: patient[yAxisKey],\n                    data: patient\n                }));\n        case \"crime\":\n            return crimeData.map((crime)=>({\n                    id: crime.Crime_ID,\n                    x: crime[xAxisKey],\n                    y: crime[yAxisKey],\n                    data: crime\n                }));\n        case \"customer\":\n            return customerData.map((customer)=>({\n                    id: customer.Customer_ID,\n                    x: customer[xAxisKey],\n                    y: customer[yAxisKey],\n                    data: customer\n                }));\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/lib/datasets.ts\n"));

/***/ })

});